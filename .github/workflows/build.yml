name: Runner CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - releases/*
    paths-ignore:
    - '**.md'
  pull_request:
    branches:
    - '**'
    paths-ignore:
    - '**.md'

jobs:
  build:
    strategy:
      matrix:
        runtime: [ s390x, ppc64le, amd64, arm64 ]

    runs-on: [ self-hosted, "${{ matrix.runtime }}" ]
    steps:
    - uses: actions/checkout@v4

    - name: Install DotNet SDK
      run: apt-get update && apt-get install -y dotnet-sdk-8.0

    - name: Apply patches
      if: matrix.runtime == 's390x' || matrix.runtime == 'ppc64le'
      run: |
        git apply patches/runner-main-sdk8-${{ matrix.runtime }}.patch

    - name: Update DotNet required version pin
      run: |
        sed -i "s/$( cat src/global.json | jq -r '.sdk.version' )/8.0/" src/global.json

    # Build runner layout
    - name: Build & Layout Release
      run: |
        ./dev.sh layout Release ${{ matrix.runtime }}
      working-directory: src

    # Run tests
    - name: L0
      run: |
        ./dev.sh test
      working-directory: src
      if: matrix.runtime == 'arm64' || matrix.runtime == 'amd64'

    # Create runner package tar.gz/zip
    - name: Package Release
      if: github.event_name != 'pull_request'
      run: |
        ./dev.sh package Release ${{ matrix.runtime }}
      working-directory: src

    # Upload runner package tar.gz/zip as artifact
    - name: Publish Artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: runner-package-${{ matrix.runtime }}
        path: |
          _package
